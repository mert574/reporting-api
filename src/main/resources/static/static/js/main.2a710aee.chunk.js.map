{"version":3,"sources":["polyfill.js","reducers/LoginHandler.js","reducers/index.js","Store.js","Util.js","actions/index.js","components/Countdown.js","components/Navbar.js","pages/Index.js","pages/Login.js","pages/Report.js","pages/List.js","pages/Logs.js","pages/Transaction.js","pages/Client.js","App.js","index.js"],"names":["Object","entries","obj","ownProps","keys","i","length","resArray","Array","LoginHandler","state","arguments","undefined","action","type","objectSpread","token","combineReducers","Login","store","createStore","rootReducer","sendRequest","_sendRequest","asyncToGenerator","regenerator_default","a","mark","_callee","url","method","paramsObj","header","params","_args","wrap","_context","prev","next","Authorization","Store","getState","hasOwnProperty","Accept","forEach","_ref","_ref2","slicedToArray","key","val","concat","substr","fetch","headers","then","r","json","abrupt","sent","stop","this","_x","apply","parseDate","date","getFullYear","paddedNum","getMonth","getDate","num","Countdown","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","timer","interval","left","mins","seconds","started","tick","bind","assertThisInitialized","tokenExists","start","setState","_this$state","dispatch","setTimeout","react_default","createElement","Fragment","React","Component","connect","myNavbar","toggle","isOpen","reactstrap_es","color","dark","expand","tag","Link","to","onClick","navbar","className","components_Countdown","Index","class","submit","changed","email","password","waiting","message","event","preventDefault","target","post","status","defineProperty","name","value","Redirect","md","id","lg","onSubmit","onChange","htmlFor","placeholder","required","style","width","Report","startDate","Date","endDate","loading","handleChange","onQuery","fromDate","toDate","resp","_this2","autoComplete","xs","react_datepicker_es","dateFormat","selected","selectsStart","d","showYearDropdown","showMonthDropdown","block","selectsEnd","sm","main_default","src","theme","List","handleChangeDate","_event$target","defaultValue","hidden","disabled","maxLength","min","Logs","refresh","logs","text","document","getElementById","rows","readOnly","Transaction","transactionId","Client","App","BrowserRouter","Navbar","Route","path","exact","component","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.2a710aee.chunk.js","sourcesContent":["import 'react-app-polyfill/ie9';\r\n\r\nif (!Object.entries)\r\n    Object.entries = function (obj) {\r\n        var ownProps = Object.keys(obj),\r\n            i = ownProps.length,\r\n            resArray = new Array(i);\r\n        while (i--)\r\n            resArray[i] = [ownProps[i], obj[ownProps[i]]];\r\n\r\n        return resArray;\r\n};\r\n","const LoginHandler = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_TOKEN':\r\n            return {\r\n                ...state,\r\n                \"token\": action.token\r\n            };\r\n\r\n        case 'TOKEN_EXPIRED':\r\n            return {\r\n                ...state,\r\n                \"token\": null\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default LoginHandler;\r\n","import { combineReducers } from 'redux';\r\nimport Login from './LoginHandler';\r\n\r\nexport default combineReducers({\r\n    Login\r\n})","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;\r\n","import Store from './Store';\r\n\r\nexport const sendRequest = async function sendRequest(url, method=\"POST\", paramsObj={}, header={}) {\r\n    let params = \"?\";\r\n\r\n    header.Authorization = extractAuth(Store.getState());\r\n    header.Accept = 'application/json';\r\n\r\n    Object.entries(paramsObj).forEach(([key, val])=>{ params += `${key}=${val}&`; });\r\n    params = params.substr(0, params.length-1);\r\n\r\n    return await fetch(url + params, { \"method\": method, \"headers\": header }).then(r=>r.json());\r\n}\r\n\r\nexport const parseDate = function parseDate(date) {\r\n    return date.getFullYear() + '-' + paddedNum(date.getMonth() + 1) + '-' + paddedNum(date.getDate());\r\n}\r\n\r\nexport const paddedNum = function paddedNum(num) {\r\n    return (num < 10) ? `0${num}` : `${num}`;\r\n}\r\n\r\nfunction extractAuth(state) {\r\n    return state.hasOwnProperty('Login') && state.Login.hasOwnProperty('token') ? state.Login.token : null;\r\n}\r\n","export const updateToken = token => ({\r\n    \"type\": 'UPDATE_TOKEN',\r\n    token\r\n});\r\n\r\nexport const tokenExpired = token => ({\r\n    \"type\": 'TOKEN_EXPIRED'\r\n});\r\n","import React from 'react';\r\nimport {paddedNum} from '../Util';\r\nimport { connect } from 'react-redux';\r\nimport { tokenExpired } from '../actions';\r\n\r\nclass Countdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timer = null;\r\n        this.interval = 1000;\r\n        this.left = props.left;\r\n\r\n        this.state = {\r\n            \"mins\": 10,\r\n            \"seconds\": 0,\r\n            \"started\": false\r\n        }\r\n\r\n        this.tick = this.tick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.started && this.props.tokenExists) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.setState({\"started\": true, \"mins\": 10, \"seconds\": 0});\r\n        this.tick();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.state.started && this.props.tokenExists) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        const {mins, seconds} = this.state;\r\n\r\n        if (seconds === 0) {\r\n            if (mins > 0) {\r\n                this.setState({\"mins\": mins-1, \"seconds\": 59});\r\n            } else {\r\n                this.setState({\"started\": false});\r\n                this.props.dispatch(tokenExpired());\r\n                return;\r\n            }\r\n        } else {\r\n            this.setState({\"seconds\": seconds-1});\r\n        }\r\n\r\n        setTimeout(this.tick, this.interval);\r\n    }\r\n\r\n    render() {\r\n        return (<>{paddedNum(this.state.mins)}:{paddedNum(this.state.seconds)} {this.left}</>);\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \"tokenExists\": state.Login.token && state.Login.token.length > 0 };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Countdown);\r\n","import React from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from 'reactstrap';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport Countdown from './Countdown';\r\n\r\nclass myNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            \"isOpen\": false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ \"isOpen\": !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand tag={Link} to=\"/\">Reporter</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem><NavLink tag={Link} to=\"/report\">Transactions Report</NavLink></NavItem>\r\n                            <NavItem><NavLink tag={Link} to=\"/list\">List Transactions</NavLink></NavItem>\r\n                            <NavItem><NavLink tag={Link} to=\"/info/transaction\">Get Transaction</NavLink></NavItem>\r\n                            <NavItem><NavLink tag={Link} to=\"/info/client\">Get Client</NavLink></NavItem>\r\n                        </Nav>\r\n\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem><NavLink tag={Link} to=\"/logs\">Check Logs</NavLink></NavItem>\r\n                            <NavItem className={this.props.tokenExists ? 'd-none' : ''}><NavLink tag={Link} to=\"/login\">Login</NavLink></NavItem>\r\n                        </Nav>\r\n\r\n                        <div className={\"authenticated badge badge-pill badge-info \" + (this.props.tokenExists ? '' : 'd-none')}>\r\n                            Authenticated for: <Countdown />\r\n                        </div>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \"tokenExists\": state.Login.token && state.Login.token.length > 0 };\r\n};\r\n\r\nexport default connect(mapStateToProps)(myNavbar);\r\n","import React, { Component } from 'react';\r\n\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\nexport default class Index extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col className=\"text-center\">\r\n                    <h1>Reporting API Query Dashboard</h1>\r\n                    <hr />\r\n                    <p class=\"lead\">\r\n                        After getting Auth Token from the login page using your credentials, <br />\r\n                        you can start using the system.\r\n                    </p>\r\n                </Col>\r\n            </Row>);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { updateToken } from '../actions';\r\nimport {Row, Col} from 'reactstrap';\r\nimport { sendRequest } from '../Util';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submit = this.submit.bind(this);\r\n        this.changed = this.changed.bind(this);\r\n\r\n        this.state = {\r\n            \"email\": \"\",\r\n            \"password\": \"\",\r\n            \"waiting\": false,\r\n            \"message\": null\r\n        }\r\n    }\r\n\r\n    async submit(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({ \"waiting\": true, \"message\": null });\r\n\r\n        const post = await sendRequest(event.target.action, \"POST\", {\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n        });\r\n\r\n        if (post.status === \"APPROVED\") {\r\n            this.props.dispatch(updateToken(post.token));\r\n        } else if (post.status === \"DECLINED\") {\r\n           this.setState({\"message\": post.message, \"waiting\": false});\r\n        }\r\n    }\r\n\r\n    changed(event) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        if (this.props.token) {\r\n            return (<Redirect to=\"/\" />);\r\n        }\r\n\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <legend>Query <kbd>/merchant/user/login</kbd></legend>\r\n                    <hr />\r\n                </Col>\r\n                <Col id=\"loginPage\" lg=\"6\" className=\"m-auto\">\r\n                    <legend className=\"fadeIn second\">Get Valid Token</legend>\r\n\r\n                    <form id=\"loginForm\" method=\"POST\" \r\n                        action=\"/merchant/user/login\"\r\n                        onSubmit={this.submit}\r\n                        onChange={this.changed}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"fadeIn first\">Email address</label>\r\n                            <input id=\"email\" type=\"email\" name=\"email\" className=\"form-control fadeIn first\" placeholder=\"E-Mail\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\" className=\"fadeIn first\">Password</label>\r\n                            <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control fadeIn first\" placeholder=\"Password\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" className=\"btn btn-primary form-control fadeIn third\" value=\"Get Token\" />\r\n                            <div className={'progress ' + (this.state.waiting ? '':'d-none')}>\r\n                                <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{\"width\": \"100%\"}}></div>\r\n                            </div>\r\n                            <div>{this.state.message}</div>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n            </Row>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \"token\": state.Login.token };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { parseDate, sendRequest } from '../Util';\r\nimport ReactJson from 'react-json-view';\r\n\r\nclass Report extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \"startDate\": new Date(\"2000-01-01\"),\r\n            \"endDate\": new Date(\"2018-12-31\"),\r\n            \"loading\": false,\r\n            \"json\": {}\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onQuery = this.onQuery.bind(this);\r\n    }\r\n\r\n    handleChange(name, date) {\r\n        this.setState({[name]: date});\r\n    }\r\n\r\n    async onQuery(event) {\r\n        event.preventDefault();\r\n        this.setState({\"json\": {}, \"loading\": true});\r\n\r\n        const resp = await sendRequest('/transactions/report', 'POST', {\r\n            \"fromDate\": parseDate(this.state.startDate),\r\n            \"toDate\": parseDate(this.state.endDate)\r\n        });\r\n\r\n        this.setState({\"json\": resp, \"loading\": false});\r\n    }\r\n\r\n    render() {\r\n        return (<Row>\r\n            <Col md=\"12\">\r\n                <legend>Query <kbd>/transactions/report</kbd></legend>\r\n                <hr />\r\n            </Col>\r\n            <Col md=\"5\">\r\n                <Form autoComplete=\"off\" onSubmit={this.onQuery}>\r\n                    <Row className=\"form-group\">\r\n                        <Col xs=\"6\">\r\n                            <Label htmlFor=\"startDate\">Start Date</Label>\r\n                            <DatePicker\r\n                                id=\"startDate\"\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                selected={this.state.startDate}\r\n                                selectsStart\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                onChange={d=>this.handleChange('startDate', d)}\r\n                                className=\"form-control\"\r\n                                showYearDropdown\r\n                                showMonthDropdown\r\n                                block\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"6\">\r\n                            <Label htmlFor=\"endDate\">End Date</Label>\r\n                            <DatePicker\r\n                                id=\"endDate\"\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                selected={this.state.endDate}\r\n                                selectsEnd\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                onChange={d=>this.handleChange('endDate', d)}\r\n                                className=\"form-control\"\r\n                                showYearDropdown\r\n                                showMonthDropdown\r\n                                block\r\n                            />\r\n                        </Col>\r\n                        <Col sm=\"12\"><small className=\"form-text text-muted\">Query will be limited between these dates.</small></Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"merchantId\">Merchant ID</Label>\r\n                        <Input type=\"number\" id=\"merchantId\" placeholder=\"Enter Merchant ID\" />\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"acquirerId\">Acquirer ID</Label>\r\n                        <Input type=\"number\" id=\"acquirerId\" placeholder=\"Enter Acquirer ID\" />\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\" block>Query</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"7\">\r\n                <Label htmlFor=\"result\">Query Result</Label>\r\n                <ReactJson src={this.state.json} name=\"QueryResult\" theme=\"eighties\" />\r\n            </Col>\r\n        </Row>);\r\n    }\r\n}\r\n\r\nexport default connect()(Report);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { parseDate, sendRequest } from '../Util';\r\nimport ReactJson from 'react-json-view';\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \"fromDate\": new Date(\"2000-01-01\"),\r\n            \"toDate\": new Date(\"2018-12-31\"),\r\n            \"json\": {}\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.onQuery = this.onQuery.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {id, value} = event.target;\r\n        this.setState({[id]: value.length > 0 ? value : undefined});\r\n    }\r\n\r\n    handleChangeDate(id, date) {\r\n        this.setState({[id]: date});\r\n    }\r\n\r\n    async onQuery(event) {\r\n        event.preventDefault();\r\n        this.setState({\"json\": {}, \"loading\": true});\r\n\r\n        const resp = await sendRequest('/transaction/list', 'POST', {\r\n            ...this.state,\r\n            \"json\": undefined, \"loading\": undefined,\r\n            \"fromDate\": parseDate(this.state.fromDate),\r\n            \"toDate\": parseDate(this.state.toDate)\r\n        });\r\n\r\n        this.setState({\"json\": resp, \"loading\": false});\r\n    }\r\n\r\n    render() {\r\n        return (<Row>\r\n            <Col md=\"12\">\r\n                <legend>Query <kbd>/transaction/list</kbd></legend>\r\n                <hr />\r\n            </Col>\r\n            <Col md=\"5\">\r\n                <Form autoComplete=\"off\" onSubmit={this.onQuery}>\r\n                    <Row className=\"form-group\">\r\n                        <Col xs=\"6\">\r\n                            <Label htmlFor=\"startDate\">Start Date</Label>\r\n                            <DatePicker\r\n                                id=\"fromDate\"\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                selected={this.state.fromDate}\r\n                                selectsStart\r\n                                startDate={this.state.fromDate}\r\n                                endDate={this.state.endDate}\r\n                                onChange={d=>this.handleChangeDate('fromDate', d)}\r\n                                className=\"form-control\"\r\n                                showYearDropdown\r\n                                showMonthDropdown\r\n                                block\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"6\">\r\n                            <Label htmlFor=\"endDate\">End Date</Label>\r\n                            <DatePicker\r\n                                id=\"endDate\"\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                selected={this.state.toDate}\r\n                                selectsEnd\r\n                                startDate={this.state.fromDate}\r\n                                endDate={this.state.toDate}\r\n                                onChange={d=>this.handleChangeDate('toDate', d)}\r\n                                className=\"form-control\"\r\n                                showYearDropdown\r\n                                showMonthDropdown\r\n                                block\r\n                            />\r\n                        </Col>\r\n                        <Col sm=\"12\"><small className=\"form-text text-muted\">Query will be limited between these dates.</small></Col>\r\n                    </Row>\r\n                    \r\n                    <FormGroup>\r\n                        <Label htmlFor=\"status\">Status</Label>\r\n                        <Input type=\"select\" id=\"status\" defaultValue=\"\">\r\n                            <option hidden disabled value=\"\">Select Status</option>\r\n                            <option></option>\r\n                            <option>APPROVED</option>\r\n                            <option>WAITING</option>\r\n                            <option>DECLINED</option>\r\n                            <option>ERROR</option>\r\n                        </Input>\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"operation\">Operation</Label>\r\n                        <Input type=\"select\" id=\"operation\" defaultValue=\"\">\r\n                            <option hidden disabled value=\"\">Select Operation</option>\r\n                            <option></option>\r\n                            <option>DIRECT</option>\r\n                            <option>REFUND</option>\r\n                            <option>3D</option>\r\n                            <option>3DAUTH</option>\r\n                            <option>STORED</option>\r\n                        </Input>\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"merchantId\">Merchant ID</Label>\r\n                        <Input type=\"number\" id=\"merchantId\" placeholder=\"Enter Merchant ID\" />\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"acquirerId\">Acquirer ID</Label>\r\n                        <Input type=\"number\" id=\"acquirerId\" placeholder=\"Enter Acquirer ID\" />\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup>\r\n                        <Label htmlFor=\"paymentMethod\">Payment Method</Label>\r\n                        <Input type=\"select\" id=\"paymentMethod\" defaultValue=\"\">\r\n                            <option hidden disabled value=\"\">Select Payment Method</option>\r\n                            <option></option>\r\n                            <option>CREDITCARD</option>\r\n                            <option>CUP</option>\r\n                            <option>IDEAL</option>\r\n                            <option>GIROPAY</option>\r\n                            <option>MISTERCASH</option>\r\n                            <option>STORED</option>\r\n                            <option>PAYTOCARD</option>\r\n                            <option>CEPBANK</option>\r\n                            <option>CITADEL</option>\r\n                        </Input>\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"errorCode\">Error Code</Label>\r\n                        <Input type=\"select\" id=\"errorCode\" defaultValue=\"\">\r\n                            <option hidden disabled value=\"\">Select Error Code</option>\r\n                            <option></option>\r\n                            <option>Do not honor</option>\r\n                            <option>Invalid Transaction</option>\r\n                            <option>Invalid Card</option>\r\n                            <option>Not sufficient funds</option>\r\n                            <option>Incorrect PIN</option>\r\n                            <option>Invalid country association</option>\r\n                            <option>Currency not allowed</option>\r\n                            <option>3-D Secure Transport Error</option>\r\n                            <option>Transaction not permitted to cardholder</option>                            \r\n                        </Input>\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Col xs=\"6\">\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"filterField\">Filter Field</Label>\r\n                                <Input type=\"select\" id=\"filterField\" defaultValue=\"\">\r\n                                    <option hidden disabled value=\"\">Select Filter Field</option>\r\n                                    <option></option>\r\n                                    <option>Transaction UUID</option>\r\n                                    <option>Customer Email</option>\r\n                                    <option>Reference No</option>\r\n                                    <option>Custom Data</option>\r\n                                    <option>Card PAN</option>\r\n                                </Input>\r\n                                <small className=\"form-text text-muted\">Optional</small>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col xs=\"6\">\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"filterValue\">Filter Value</Label>\r\n                                <Input type=\"text\" maxLength=\"256\" id=\"filterValue\" placeholder=\"Enter Filter Value\" />\r\n                                <small className=\"form-text text-muted\">Optional</small>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"page\">Page</Label>\r\n                        <Input type=\"number\" id=\"page\" placeholder=\"Enter Page\" min=\"1\" />\r\n                        <small className=\"form-text text-muted\">Optional</small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\" block>Query</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Col>\r\n            <Col md=\"7\">\r\n                <Label htmlFor=\"result\">Query Result</Label>\r\n                <ReactJson src={this.state.json} name=\"QueryResult\" theme=\"eighties\" />\r\n            </Col>\r\n        </Row>);\r\n    }\r\n}\r\n\r\nexport default connect()(List);\r\n","import React from 'react';\r\nimport {Row, Col, Button} from 'reactstrap';\r\n\r\nclass Logs extends React.Component {\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    async refresh() {\r\n        const logs = await fetch('/actuator/logfile');\r\n        document.getElementById('logs').value = await logs.text();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col xs=\"12\">\r\n                    <Row>\r\n                        <Col tag=\"legend\">Logs</Col>\r\n                        <Col><Button color=\"primary\" className=\"float-right\" onClick={this.refresh}>Refresh</Button></Col>\r\n                    </Row>\r\n                    <hr />\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                    <textarea id=\"logs\" className=\"form-control\" rows=\"32\" readOnly></textarea>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Logs;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { sendRequest } from '../Util';\r\nimport ReactJson from 'react-json-view';\r\n\r\nclass Transaction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            transactionId: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onQuery = this.onQuery.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {id, value} = event.target;\r\n        this.setState({[id]: value});\r\n    }\r\n\r\n    async onQuery(event) {\r\n        event.preventDefault();\r\n        this.setState({\"json\": {}, \"loading\": true});\r\n\r\n        const resp = await sendRequest('/transaction', 'POST', {\r\n            \"transactionId\": this.state.transactionId\r\n        });\r\n\r\n        this.setState({\"json\": resp, \"loading\": false});\r\n    }\r\n\r\n    render() {\r\n        return (<Row>\r\n            <Col md=\"12\">\r\n                <legend>Query <kbd>/transaction</kbd></legend>\r\n                <hr />\r\n            </Col>\r\n            <Col md=\"5\">\r\n            <Form autoComplete=\"off\" onSubmit={this.onQuery}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"transactionId\">Transaction ID</Label>\r\n                    <Input type=\"text\" maxLength=\"32\" id=\"transactionId\" \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter Transaction ID\" required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\" block>Query</Button>\r\n                </FormGroup>\r\n            </Form>\r\n            </Col>\r\n            <Col md=\"7\">\r\n                <Label htmlFor=\"result\">Query Result</Label>\r\n                <ReactJson src={this.state.json} name=\"QueryResult\" theme=\"eighties\" />\r\n            </Col>\r\n        </Row>);\r\n    }\r\n}\r\n\r\nexport default connect()(Transaction);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Row, Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { sendRequest } from '../Util';\r\nimport ReactJson from 'react-json-view';\r\n\r\nclass Client extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \"transactionId\": null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onQuery = this.onQuery.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {id, value} = event.target;\r\n        this.setState({[id]: value});\r\n    }\r\n\r\n    async onQuery(event) {\r\n        event.preventDefault();\r\n        this.setState({\"json\": {}, \"loading\": true});\r\n\r\n        const resp = await sendRequest('/client', 'POST', {\r\n            \"transactionId\": this.state.transactionId\r\n        });\r\n\r\n        this.setState({\"json\": resp, \"loading\": false});\r\n    }\r\n\r\n    render() {\r\n        return (<Row>\r\n            <Col md=\"12\">\r\n                <legend>Query <kbd>/client</kbd></legend>\r\n                <hr />\r\n            </Col>\r\n            <Col md=\"5\">\r\n            <Form autoComplete=\"off\" onSubmit={this.onQuery}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"transactionId\">Transaction ID</Label>\r\n                    <Input type=\"text\" maxLength=\"32\" id=\"transactionId\" \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter Transaction ID\" required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Button type=\"submit\" color=\"primary\" block>Query</Button>\r\n                </FormGroup>\r\n            </Form>\r\n            </Col>\r\n            <Col md=\"7\">\r\n                <Label htmlFor=\"result\">Query Result</Label>\r\n                <ReactJson src={this.state.json} name=\"QueryResult\" theme=\"eighties\" />\r\n            </Col>\r\n        </Row>);\r\n    }\r\n}\r\n\r\nexport default connect()(Client);\r\n","import React, { Component } from 'react';\n\nimport './Stylesheets/bootstrap.min.css';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {Container} from \"reactstrap\";\nimport Navbar from './components/Navbar';\nimport Index from './pages/Index';\nimport Login from './pages/Login';\nimport Report from './pages/Report';\nimport List from './pages/List';\nimport Logs from './pages/Logs';\nimport Transaction from './pages/Transaction';\nimport Client from './pages/Client';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <>\n                    <Navbar/>\n                    <Container id=\"container\">\n                        <Route path=\"/\" exact component={Index} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/report\" component={Report} />\n                        <Route path=\"/list\" component={List} />\n                        <Route path=\"/info/transaction\" component={Transaction} />\n                        <Route path=\"/info/client\" component={Client} />\n                        <Route path=\"/logs\" component={Logs} />\n                    </Container>\n                </>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import './polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport Store from './Store';\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}